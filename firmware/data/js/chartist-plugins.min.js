/* chartist-plugin-legend */
!function(e,t){"function"==typeof define&&define.amd?define(["chartist"],function(n){return e.returnExportsGlobal=t(n)}):"object"==typeof exports?module.exports=t(require("chartist")):e["Chartist.plugins.legend"]=t(e.Chartist)}(this,function(e){"use strict";var t={className:"",classNames:!1,removeAll:!1,legendNames:!1,clickable:!0,onClick:null,position:"top"};return e.plugins=e.plugins||{},e.plugins.legend=function(n){if(n&&n.position){if(!("top"===n.position||"bottom"===n.position||n.position instanceof HTMLElement))throw Error("The position you entered is not a valid position");if(n.position instanceof HTMLElement){var a=n.position;delete n.position}}return n=e.extend({},t,n),a&&(n.position=a),function(t){!function(){var e=t.container.querySelector(".ct-legend");e&&e.parentNode.removeChild(e)}();var a=function(){var a=document.createElement("ul");return a.className="ct-legend",t instanceof e.Pie&&a.classList.add("ct-legend-inside"),"string"==typeof n.className&&n.className.length>0&&a.classList.add(n.className),t.options.width&&(a.style.cssText="width: "+t.options.width+"px;margin: 0 auto;"),a}(),i=t instanceof e.Pie&&t.data.labels&&t.data.labels.length,s=function(e){return n.legendNames||(e?t.data.labels:t.data.series)}(i),o=function(e){for(var n=new Array(t.data.series.length),a=0;a<t.data.series.length;a++)n[a]={data:t.data.series[a],label:e?t.data.labels[a]:null,legend:-1};return n}(i),l=[],r=Array.isArray(n.classNames)&&n.classNames.length===s.length;s.forEach(function(e,t){var i=e.name||e,s=e.series||[t],c=function(e,t,a){var i=document.createElement("li");return i.classList.add("ct-series-"+e),a&&i.classList.add(n.classNames[e]),i.setAttribute("data-legend",e),i.textContent=t,i}(t,i,r);a.appendChild(c),s.forEach(function(e){o[e].legend=t}),l.push({text:i,series:s,active:!0})}),t.on("created",function(e){!function(e){if(n.position instanceof HTMLElement)n.position.insertBefore(e,null);else switch(n.position){case"top":t.container.insertBefore(e,t.container.childNodes[0]);break;case"bottom":t.container.insertBefore(e,null)}}(a)}),n.clickable&&(t.data.series=t.data.series.map(function(n,a){return"object"!=typeof n&&(n={value:n}),n.className=n.className||t.options.classNames.series+"-"+e.alphaNumerate(a),n}),function(e,a,i,s){e.addEventListener("click",function(o){var l=o.target;if(l.parentNode===e&&l.hasAttribute("data-legend")){o.preventDefault();var r=parseInt(l.getAttribute("data-legend")),c=a[r];if(c.active){c.active=!1,l.classList.add("inactive");var d=a.filter(function(e){return e.active}).length;if(!n.removeAll&&0==d)for(p=0;p<a.length;p++)a[p].active=!0,e.childNodes[p].classList.remove("inactive")}else c.active=!0,l.classList.remove("inactive");for(var u=[],f=[],p=0;p<i.length;p++)-1!=i[p].legend&&a[i[p].legend].active&&(u.push(i[p].data),f.push(i[p].label));t.data.series=u,s&&(t.data.labels=f),t.update(),n.onClick&&n.onClick(t,o)}})}(a,l,o,i))}},e.plugins.legend});

/* chartist-plugin-pointlabels 0.0.6 */
!function(a,b){"function"==typeof define&&define.amd?define(["chartist"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("chartist")):a["Chartist.plugins.ctPointLabels"]=b(Chartist)}(this,function(a){return function(a,b,c){"use strict";var d={labelClass:"ct-label",labelOffset:{x:0,y:-10},textAnchor:"middle",align:"center",labelInterpolationFnc:c.noop},e={point:function(a){return{x:a.x,y:a.y}},bar:{left:function(a){return{x:a.x1,y:a.y1}},center:function(a){return{x:a.x1+(a.x2-a.x1)/2,y:a.y1}},right:function(a){return{x:a.x2,y:a.y1}}}};c.plugins=c.plugins||{},c.plugins.ctPointLabels=function(a){function b(b,c){var d=void 0!==c.value.x&&c.value.y?c.value.x+", "+c.value.y:c.value.y||c.value.x;c.group.elem("text",{x:b.x+a.labelOffset.x,y:b.y+a.labelOffset.y,style:"text-anchor: "+a.textAnchor},a.labelClass).text(a.labelInterpolationFnc(d))}return a=c.extend({},d,a),function(d){(d instanceof c.Line||d instanceof c.Bar)&&d.on("draw",function(c){var d=e[c.type]&&e[c.type][a.align]||e[c.type];d&&b(d(c),c)})}}}(window,document,a),a.plugins.ctPointLabels});

/* Chartist-plugin-targetline custom */
(function(window,document,Chartist){'use strict';
	var defaultOptions={class:'ct-target-line',value:null,labelpretext:'',labelyoffset:0};
	Chartist.plugins=Chartist.plugins||{};
	Chartist.plugins.ctTargetLine=function(options){
		options = Chartist.extend({},defaultOptions,options);
		return function ctTargetLine(chart) {
			function projectY(chartRect,bounds,value){
				return chartRect.y1-(chartRect.height()/bounds.max*value)
			}
			chart.on('created',function(context){
				var targetLineY = projectY(context.chartRect,context.bounds,options.value);
				context.svg.elem('line',{
					x1:context.chartRect.x1,
					x2:context.chartRect.x2,
					y1:targetLineY,
					y2:targetLineY
				},options.class);
				context.svg.elem('text',{
					x:context.chartRect.x1,
					y:targetLineY+options.labelyoffset,
				},'ct-target-label').text(options.labelpretext+options.value);
			});
			chart.on('data',function(context){options.value=context.data.targetline;});
		};
	};
}(window,document,Chartist));

/* chartist-plugin-value-donut custom */
(function(window,document,Chartist){'use strict';
	var defaultOptions={class:'ct-target-line',value:null,labelpasttext:'',offsetX:0};
	Chartist.plugins=Chartist.plugins||{};
	Chartist.plugins.fillDonut=function(options){
		options = Chartist.extend({},defaultOptions,options);
		return function fillDonut(chart){
			chart.on('created',function(context){
				let val=chart.data.series[0];
				if (val==0){val='--';}
				context.svg.elem('text',{
					x:(context.chartRect.x2-context.chartRect.x1)/2+options.offsetX,
					y:context.chartRect.y1/2,
				},'ct-target-label').text(val+options.labelpasttext);
			});
		};
	};
}(window,document,Chartist));